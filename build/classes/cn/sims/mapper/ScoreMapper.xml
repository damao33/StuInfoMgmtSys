<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sims.dao.ScoreMapper">
  <resultMap id="BaseResultMap" type="cn.sims.model.Score">
    <result column="Sno" jdbcType="CHAR" property="sno" />
    <result column="Sname" jdbcType="VARCHAR" property="sname" />
    <result column="Cno" jdbcType="VARCHAR" property="cno" />
    <result column="Cname" jdbcType="VARCHAR" property="cname" />
    <result column="Degrees" jdbcType="DECIMAL" property="degrees" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Sno, Sname, Cno, Cname, Degrees
  </sql>
  <select id="selectByExample" parameterType="cn.sims.model.ScoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.sims.model.ScoreExample">
    delete from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.sims.model.Score">
    insert into score (Sno, Sname, Cno, 
      Cname, Degrees)
    values (#{sno,jdbcType=CHAR}, #{sname,jdbcType=VARCHAR}, #{cno,jdbcType=VARCHAR}, 
      #{cname,jdbcType=VARCHAR}, #{degrees,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="cn.sims.model.Score">
    insert into score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        Sno,
      </if>
      <if test="sname != null">
        Sname,
      </if>
      <if test="cno != null">
        Cno,
      </if>
      <if test="cname != null">
        Cname,
      </if>
      <if test="degrees != null">
        Degrees,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        #{sno,jdbcType=CHAR},
      </if>
      <if test="sname != null">
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="cno != null">
        #{cno,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="degrees != null">
        #{degrees,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.sims.model.ScoreExample" resultType="java.lang.Long">
    select count(*) from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update score
    <set>
      <if test="record.sno != null">
        Sno = #{record.sno,jdbcType=CHAR},
      </if>
      <if test="record.sname != null">
        Sname = #{record.sname,jdbcType=VARCHAR},
      </if>
      <if test="record.cno != null">
        Cno = #{record.cno,jdbcType=VARCHAR},
      </if>
      <if test="record.cname != null">
        Cname = #{record.cname,jdbcType=VARCHAR},
      </if>
      <if test="record.degrees != null">
        Degrees = #{record.degrees,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update score
    set Sno = #{record.sno,jdbcType=CHAR},
      Sname = #{record.sname,jdbcType=VARCHAR},
      Cno = #{record.cno,jdbcType=VARCHAR},
      Cname = #{record.cname,jdbcType=VARCHAR},
      Degrees = #{record.degrees,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>